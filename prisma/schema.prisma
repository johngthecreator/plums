generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
  relationMode = "foreignKeys"
}


// model Topic {
//   topic_id  Int     @id @default(autoincrement())
//   name      String
//   notes     Note[]
//   images    Image[]
//   urls      Link[]
//   userId    String
//   tags      Tag[]   @relation("TopicTags")

//   @@index([topic_id])
// }

model Topic {
  topic_id     Int      @id @default(autoincrement())
  name         String
  notes        Note[]
  images       Image[]
  urls         Link[]
  userId       String
  tags         Tag[]    @relation("TopicTags")
  parentId     Int?     @map("parentTopicId") // This field points to the parent Topic ID
  children     Topic[]  @relation("TopicHierarchy") // This relation handles multiple child topics
  parentTopic  Topic?   @relation("TopicHierarchy", fields: [parentId], references: [topic_id])

  @@index([topic_id])
}


model Note {
  note_id    Int      @id @default(autoincrement())
  title      String
  text       String
  topicId    Int
  topic_note Topic    @relation(fields: [topicId], references: [topic_id], onDelete: Cascade)
  @@index([note_id])
}

model Image {
  image_id    Int      @id @default(autoincrement())
  title      String
  imageData      String
  topicId    Int
  topic_note Topic    @relation(fields: [topicId], references: [topic_id], onDelete: Cascade)
  @@index([image_id])
}

model Link {
  link_id    Int      @id @default(autoincrement())
  title String
  url String
  description String
  topicId    Int
  topic_note Topic    @relation(fields: [topicId], references: [topic_id], onDelete: Cascade)
  @@index([link_id])
}

model Tag {
  tag_id  Int     @id @default(autoincrement())
  name    String  @unique
  topics  Topic[] @relation("TopicTags")
}



